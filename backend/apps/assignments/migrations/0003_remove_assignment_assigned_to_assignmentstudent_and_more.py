# Generated by Django 5.1.7 on 2025-04-09 04:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("assignments", "0002_initial"),
        ("courses", "0002_initial"),
        ("student", "0001_initial"),
        ("tracks", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="assignment",
            name="assigned_to",
        ),
        migrations.CreateModel(
            name="AssignmentStudent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assignments.assignment",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.student",
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tracks.track",
                    ),
                ),
            ],
            options={
                "unique_together": {("assignment", "student")},
            },
        ),
        migrations.AddField(
            model_name="assignment",
            name="assigned_to",
            field=models.ManyToManyField(
                blank=True,
                related_name="assignments",
                through="assignments.AssignmentStudent",
                to="student.student",
            ),
        ),
    ]
